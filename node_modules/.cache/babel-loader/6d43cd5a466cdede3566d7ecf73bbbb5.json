{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aayus\\\\OneDrive\\\\Desktop\\\\workSpace\\\\Sublime\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const printCount = useRef(null);\n\n  const handleChange = e => {\n    setCount(e.target.value);\n  };\n\n  const expense = parseInt(count, 10);\n\n  const showValue = () => {\n    printCount.current.textContent = count + expense;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      ref: printCount,\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: count,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showValue,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"zmz+5aDYs7o8c1a/BAy4joHH5Gk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/aayus/OneDrive/Desktop/workSpace/Sublime/my-app/src/App.js"],"names":["React","useState","useRef","App","count","setCount","printCount","handleChange","e","target","value","expense","parseInt","showValue","current","textContent"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAMK,UAAU,GAAGJ,MAAM,CAAC,IAAD,CAAzB;;AAGA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AACxBH,IAAAA,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAGC,QAAQ,CAACR,KAAD,EAAQ,EAAR,CAAxB;;AAEA,QAAMS,SAAS,GAAG,MAAM;AACpBP,IAAAA,UAAU,CAACQ,OAAX,CAAmBC,WAAnB,GAAiCX,KAAK,GAAGO,OAAzC;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAI,MAAA,GAAG,EAAEL,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AACA,MAAA,KAAK,EAAEF,KADP;AAEA,MAAA,QAAQ,EAAEG;AAFV;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AACA,MAAA,OAAO,EAAEM,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA3BQV,G;;KAAAA,G;AA6BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useRef } from 'react';\n\nfunction App() {\n\n    const [ count, setCount ] = useState(0);\n    const printCount = useRef(null);\n    \n\n    const handleChange = (e) => {\n        setCount(e.target.value);\n    }\n\n    const expense = parseInt(count, 10);\n    \n    const showValue = () => {\n        printCount.current.textContent = count + expense;\n    }\n\n\n    return (\n        <div className=\"app\">\n            <h1 ref={printCount}>0</h1>\n            <input type=\"number\" \n            value={count} \n            onChange={handleChange} />\n            <button \n            onClick={showValue}>+</button>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}